import { ActionRowBuilder, ModalBuilder, type StringSelectMenuInteraction, TextInputBuilder, TextInputStyle } from 'discord.js';
import { InteractionHandler, InteractionHandlerTypes } from '@sapphire/framework';
import { ApplyOptions } from '@sapphire/decorators';
import BumpBot from '#models/BumpBot';
import { reFormatDuration } from '#utils/util';
import { sendErrorMessage } from '#utils/embed';

@ApplyOptions<InteractionHandler.Options>({ interactionHandlerType: InteractionHandlerTypes.SelectMenu })
export class EditBotBeginHandler extends InteractionHandler {
  public override parse(ctx: StringSelectMenuInteraction<'cached'>) {
    if (!ctx.customId.startsWith('bot_settings_')) return this.none();
    const botId = ctx.customId.split('_')[2];

    return this.some<string>(botId);
  }

  public override async run(ctx: StringSelectMenuInteraction<'cached'>, botId: string) {
    if (!ctx.memberPermissions.has(8n)) {
      await sendErrorMessage({ ctx, content: '–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ü—ñ—î—ó –¥—ñ—ó.' });
      return;
    }

    const bot = await ctx.guild.members.fetch(botId).catch(() => null);
    if (!bot) {
      await sendErrorMessage({ ctx, content: '–û–±—Ä–∞–Ω–æ–≥–æ –±–æ—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ.' });
      return;
    }

    const botBump = await BumpBot.findOne({ guildId: ctx.guildId, botId }).lean();
    if (!botBump) {
      await sendErrorMessage({ ctx, content: '–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è –æ–±—Ä–∞–Ω–æ–≥–æ –±–æ—Ç–∞ –≤—ñ–¥—Å—É—Ç–Ω—ñ.' });
      return;
    }

    const typeRaw = ctx.values[0].split('_')[1];
    const type = typeRaw === 'cmd' ? 'cmdName' : typeRaw === 'color' ? 'successColor' : typeRaw === 'cooldown' ? 'cooldown' : null;
    if (!type) {
      await sendErrorMessage({ ctx, content: '–ù–µ–≤—ñ–¥–æ–º–∞ –∑–º—ñ–Ω–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è.' });
      return;
    }

    const value = type === 'cooldown' ? reFormatDuration(botBump[type]) : botBump[type];

    await ctx.showModal(
      new ModalBuilder({
        title: 'ü§ñ | –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–æ—Ç–∞',
        customId: `bot_settings_${botId}`,
        components: [
          new ActionRowBuilder<TextInputBuilder>({
            components: [
              new TextInputBuilder({
                custom_id: `value_${type}`,
                label: '–ó–Ω–∞—á–µ–Ω–Ω—è',
                style: TextInputStyle.Short,
                value: `${value}`,
              }),
            ],
          }),
        ],
      }),
    );
  }
}
